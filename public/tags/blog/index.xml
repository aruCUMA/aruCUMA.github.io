<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>blog on aruCUMA</title>
        <link>https://aruCUMA.github.io/tags/blog/</link>
        <description>Recent content in blog on aruCUMA</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 30 Mar 2023 21:44:29 +0800</lastBuildDate><atom:link href="https://aruCUMA.github.io/tags/blog/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>如何通过 hugo 和 github pages 搭建一个博客</title>
        <link>https://aruCUMA.github.io/p/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87-hugo-%E5%92%8C-github-pages-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Thu, 30 Mar 2023 21:44:29 +0800</pubDate>
        
        <guid>https://aruCUMA.github.io/p/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87-hugo-%E5%92%8C-github-pages-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;h2 id=&#34;为什么要搭建这个博客&#34;&gt;为什么要搭建这个博客&lt;/h2&gt;
&lt;p&gt;想拥有一个个人博客的最主要原因是想建立更健康的即时通讯工具使用方法，来恢复维持长时间注意力的能力（为什么建立有序的使用规则是有必要的可参考&lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/35002673/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《深度數位大掃除》&lt;/a&gt;），同时又能和朋友们保持联系。&lt;/p&gt;
&lt;p&gt;现在流行的微信等即时通讯工具的主要功能有两个，微信聊天和微信朋友圈。&lt;/p&gt;
&lt;p&gt;微信聊天总是带来碎片化的社交，尽管积少成多的短暂对话和点赞、评论确实能有效地表达关心和关注，进而维持并拉近和朋友们的关系，但碎片化同时也是割裂注意力的。并且由于“及时回复”成了一种需要被遵守的规定（因为不遵守是有可能会带来人际关系和经济上的后果的），有时就不得不随时查看新消息，那么这种对注意力的割裂又是被不断强化的。&lt;/p&gt;
&lt;p&gt;而微信朋友圈尽管是一个个人发布信息的平台，但由于微信本身的社交属性，它实际上是一个完全面向他人的、不断地带来并且作为发布者不得不接受凝视和评价的平台。&lt;/p&gt;
&lt;p&gt;因此，除了微信的用户范围几乎覆盖了所有人所以我不得不用这一点外，我没有任何一个个人理由想要用它，而现在，我正在积极地寻找它的可替代方法，以便实现原有的这些目的，又能逐渐摆脱它。&lt;/p&gt;
&lt;p&gt;而个人博客对我来说是一个完全以自己为中心的平台，甚至可以关闭点赞、评论功能来屏蔽任何他人的看法。同时，我也有可能通过 newsletter 的方式，和朋友们保持微信之外的联系，让他们能够了解我的近况，维持我们的关系。&lt;/p&gt;
&lt;p&gt;另外一个重要原因是看到很多人都有自己的博客，我就也超级想要这个玩具。&lt;/p&gt;
&lt;p&gt;因此，这个博客就诞生了！&lt;/p&gt;
&lt;h2 id=&#34;为什么选择-hugo--github-pages--github-action-这个组合&#34;&gt;为什么选择 Hugo + Github Pages + Github Action 这个组合&lt;/h2&gt;
&lt;p&gt;答：方便又便宜。&lt;/p&gt;
&lt;p&gt;Hugo 建站有非常非常多的教程，包括官方的以及个人创作者的分享，很多问题都不用自己摸索。&lt;/p&gt;
&lt;p&gt;Github Pages 解决了域名的问题，让初次搭建博客的成本变低。Github Action 也是一样，让我不用付费去使用第三方托管平台。这些都让初次建站的难度、时间成本和花费尽可能地变低了。&lt;/p&gt;
&lt;p&gt;（根据我自己的习惯，尽可能降低做一件事情预期的难度和成本，或者让过程中的乐趣远超过难度，能够让我更有动力开始着手做，也就是所谓的“没什么难的”、“不是什么大事”。）&lt;/p&gt;
&lt;p&gt;更多博客搭建方案可参考：https://randomwaves.space/posts/personal-blog-solutions/&lt;/p&gt;
&lt;h2 id=&#34;开始搭建博客&#34;&gt;开始搭建博客&lt;/h2&gt;
&lt;p&gt;以 macOS 为例，流程非常简单，只有四步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;li&gt;建站&lt;/li&gt;
&lt;li&gt;通过 Github Pages 托管&lt;/li&gt;
&lt;li&gt;通过 Github Action 发布&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;h4 id=&#34;通过-macports-安装-hugo&#34;&gt;通过 MacPorts 安装 Hugo&lt;/h4&gt;
&lt;p&gt;根据&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/installation/macos/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;，安装 hugo 有三种方式，package managers、Docker 和 build from source（windows 和 linux 也可以通过&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases/latest&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载&lt;/a&gt;解压的方式直接下载到本地），其中 package managers 最简单，我是用的其中的 MacPorts，如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo port install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;安装-git&#34;&gt;安装 git&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo port install git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;参考链接：&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;installGit&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/download/mac&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;download/mac&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;建站&#34;&gt;建站&lt;/h3&gt;
&lt;h4 id=&#34;语句&#34;&gt;语句&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site quickstart //建站, 运行后会得到一个名为 quickstart 的文件夹
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd quickstart //打开所在文件夹，也可以使用 cd &amp;#34;path&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init //初始化 git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack //拷贝主题
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#34;theme = &amp;#39;stack&amp;#39;&amp;#34; &amp;gt;&amp;gt; config.toml //配置 config.toml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;配置-configtoml&#34;&gt;配置 &lt;code&gt;config.toml&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;在一些教程中，我看到配置的方法是把&lt;code&gt;hugo-theme-stack - exampleSite - config.yaml&lt;/code&gt; 复制到&lt;code&gt;quickstart - config.toml&lt;/code&gt;里去，因此我设想&lt;code&gt; echo &amp;quot;theme = &#39;stack&#39;&amp;quot; &amp;gt;&amp;gt; config.toml&lt;/code&gt;也是能实现这个效果，但是并没有，最后还是手动粘贴进去再改后缀完成的。&lt;/p&gt;
&lt;h4 id=&#34;参考链接&#34;&gt;参考链接&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方快速开始指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo 主题一览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ednovas.xyz/2021/07/20/hugo/#%e6%b3%a8%e6%84%8f%e9%97%ae%e9%a2%98&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何使用 hugo+github pages 搭建一个个人博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/350977057&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[Hugo] Hugo的基本安装｜网站生成｜托管至Github Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;stack 主题
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/CaiJimmy/hugo-theme-stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/guide/getting-started&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/guide/getting-started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通过-github-pages-托管&#34;&gt;通过 Github Pages 托管&lt;/h3&gt;
&lt;h4 id=&#34;新建和设置-repository&#34;&gt;新建和设置 repository&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;新建一个 repository，注意需要选上 README.md，名称可以以&lt;code&gt;username.github.io&lt;/code&gt;的格式命名&lt;/li&gt;
&lt;li&gt;在 setting - pages 中设置 source 为 GIthub Actions
&lt;img src=&#34;https://aruCUMA.github.io/post/how_to_have_a_blog_with_hugo_and_github_pages/create_repository.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;create_repository&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;托管至-github-pages&#34;&gt;托管至 Github Pages&lt;/h4&gt;
&lt;p&gt;在完成第一项后，你就得到了一个格式为 &lt;code&gt;https://username.github.io&lt;/code&gt; 的 URL，首先需要在&lt;code&gt;quickstart - config.toml&lt;/code&gt;把 &lt;code&gt;baseURL&lt;/code&gt; 的位置改为这个 URL。后续的语句为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd quickstart //打开所在文件夹，也可以使用 cd &amp;#34;path&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#39;initial commit&amp;#39; //可自定义注释
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote rm origin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://username.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行后，会要求你输入 github 的账号和密码，此时密码输入平时登陆用的密码会报错，需要输入 &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;personal token&lt;/a&gt;，设置路径为 &lt;code&gt;Account Settings - Developer Settings - Personal access tokens - Tokens(classic)&lt;/code&gt;。
运行成功后，就会发现在 repository 出现了一个新的分支 master，本地 quickstart 文件夹里的所有文件都会出现在里面，此时托管这一步就成功了。&lt;/p&gt;
&lt;h3 id=&#34;通过-github-action-发布&#34;&gt;通过 Github Action 发布&lt;/h3&gt;
&lt;p&gt;在使用 Github Action 之前，我用了几次在本地生成 public 文件夹，然后 push 这个文件夹到 github repository 的方法，和用 GIthub Action 发布的方法相比，由于每次需要多几行代码，所以还是后者更方便一点，并且配置也十分得简单。&lt;/p&gt;
&lt;p&gt;首先，在博客所在的 repository 页面，点击 Pages，将 Source 修改为 Github Actions。
&lt;img src=&#34;https://aruCUMA.github.io/post/how_to_have_a_blog_with_hugo_and_github_pages/change_page_source.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;change_page_source&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其次，在博客所在的 repository 页面，点击到 &lt;code&gt;Actions - New workflow&lt;/code&gt;，搜索 Hugo，点击 Configure 开始设置。
&lt;img src=&#34;https://aruCUMA.github.io/post/how_to_have_a_blog_with_hugo_and_github_pages/choose_hugo_workflow.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;change_page_source&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;点开后，Hugo 的配置文件 hugo.yml 就已经出现了，只需修改其中的 Hugo version 即可。version 可在 terminal 中查看：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://aruCUMA.github.io/post/how_to_have_a_blog_with_hugo_and_github_pages/edit_hugo_version.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;edit_hugo_version&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;修改后，点击 start commit 即可。&lt;/p&gt;
&lt;p&gt;开始运行后，可以在 Actions 界面看到运行情况，成功后，后续在本地将更新的内容 push 到 github 后就会开始自动更新了。
&lt;img src=&#34;https://aruCUMA.github.io/post/how_to_have_a_blog_with_hugo_and_github_pages/workflow_run_condition.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;workflow_run_condition&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;开始写博客&#34;&gt;开始写博客&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new post/xxx.md //新建博客文章
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时，content 文件夹中会新建 post 文件夹，并新建名为 xxx 的 md 文档，文档会有一些前置参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;title: &amp;#34;&amp;#34; //文章标题
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;date: //写作日期
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;lastmod: //最后一次修改日期
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;draft: false //是否为草稿，是的话不会展示在发布后的界面中，但会展示在本地界面中
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其他常用的有：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;subtitle: //文章副标题
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;description: //文章描述
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tags: //标签
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;categories: //分类
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hidden: //是否隐藏，是的话不会展示在发布后的界面中，但可以通过文章链接访问
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;featuredImage: //文章题图
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;featuredImagePreview: //预览界面文章题图
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;toc: //是否显示右侧目录
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;更多的可参考：&lt;a class=&#34;link&#34; href=&#34;https://shuzang.github.io/2019/hugo-blog-article-write/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;# hugo搭建个人博客2-文章写作&lt;/a&gt;
文章创建的模版在 &lt;code&gt;archetypes - default.md&lt;/code&gt;中，可在其中添加自己需要的参数。
完成写作后，在 terminal 中通过如下语句将更新内容 push 到 github 里，Github Actions 就会完成自动更新，点开博客链接就能看到内容啦。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add xxx.md
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#39;update xxx.md&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;其他常用语句&#34;&gt;其他常用语句&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote -v //查看分支链接
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -a //查看远程分支
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote remove origin //删除远程分支 origin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//更新 token
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git credential-osxkeychain erase  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;host=github.com  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;protocol=https  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;ge&#34;&gt;[Press Return] //再输入 git push 的命令就会被要求输入新的密码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
